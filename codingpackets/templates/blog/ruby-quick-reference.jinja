{% extends "_layouts/blog.jinja" %}

{% block page_content %}

<h3 id="best-practices">Best Practices</h3>
<p>
  {{ link::e(path="https://github.com/bbatsov/ruby-style-guide" , description="Ruby Style Guide") }}

</p>
<p>
  {{ link::e(path="https://www.betterspecs.org/" , description="Rails Testing Best Practices") }}

</p>
<h3 id="comment">Comment</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code="# Single line comment

# Multiple
# line
# comment"
) }}

<h3 id="variable">Variable</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='stuff = "stuff"'
) }}


<h3 id="string">String</h3>
<p>
  Stings are mutable in Ruby
</p>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='"Single line string"'
) }}





<h3 id="here-doc">HERE Doc</h3>
<p>
  HERE are used for multi-line strings
</p>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='# Old style - Ruby < 2.3 keep white space preceding string.
stuff = <<-DOC
  Stuff and thing.
  More stuff and things
DOC
#=> "  Stuff and thing.\n  More stuff and things\n"

# Squiggly line style - Ruby >= 2.3 strips preceding white space
stuff = <<~DOC
  Stuff and thing.
  More stuff and things
DOC
#=> "Stuff and thing.\nMore stuff and things\n"'
) }}

<h3 id="symbol">Symbol</h3>
<p>
  Symbols are similar to strings except they are immutable
</p>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code=':stuff'
) }}


<h3 id="integer">Integer</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='42'
) }}


<h3 id="boolean">Boolean</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='true

# or

false'
) }}

<h3 id="array">Array</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='["stuff", "things"]'
) }}


<h3 id="hash">Hash</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='# Old syntax - Ruby < 1.9
{:stuff_key => "stuff_value", :things_key => "things_value"}

# New syntax - Ruby >= 1.9
{stuff_key: "stuff_value", things_key: "things_value"}'
) }}

<h3 id="for-loop">For Loop</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='# Iterate array with a block
things.each do |thing|
  puts "#{thing}"
end

# One line block syntax for short code blocks
things.each {|thing| puts "#{thing}"}

# Iterate hash
stuff.each do |key, value|
  puts "#{key} #{value}"
end'
) }}

<h3 id="while-loop">While Loop</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='i = 1
while i < 42 do
  puts(i)
  i += 1
end'
) }}


<h3 id="if-elsif-else">If, Elsif, Else</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='if 1 > 42
  puts "One"
elsif 42 < 1
  puts "The answer"
else
  puts "Maths is fun"
end'
) }}



<h3 id="function">Function</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='def stuff
  # The last element in a function is returned automatically
  ["stuff", "more stuff", "other stuff"]
end'
) }}


<h3 id="class">Class</h3>
{{ text::code_block(
  header="ruby",
  language="ruby",
  code='class StuffAndThings
  attr_reader :stuff # Getter only
  attr_writer :things # Setter only
  attr_accessor :blah # Getter and Setter
  def initialize(stuff, things, blah)
    @stuff = stuff
    @things = things
    @blah = blah
  end
end'
) }}

{% endblock page_content %}