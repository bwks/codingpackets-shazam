{% extends "_layouts/blog.jinja" %}

{% block page_content %}
<h3 id="intro">Intro</h3>
<p>
  The Lucky web framework takes some inspiration 
  from Rails and has alot of magic. That is part of the 
  reason why I really like the framework. 
</p>
<p>
  I recently had an issue with the way acronyms are 
  pluralised (similar to my experience with Rails) 
  and this post goes over the workaround.
</p>

<h3 id="the-issue">The Issue</h3>
<p>
  VRF is pluralised to vrves?????? Baby jesus help me please!!!
</p>

<p>
  {{ link::e(path="https://btihen.me/post_crystal/lucky_0_28_0_inflections/", description="This") }} 
  excellent post contains most of the workaround and an 
  excellent explaination so I won't repeat it here.
</p>

<h3 id="the-workaround">The Workaround</h3>
<p>
  The first thing to do is add inflection rules in the 
  {{ text::emphasize(text="config/infector.cr") }}
  
  file.
</p>
{{ text::code_block(
  header="file",
  language="crystal",
  code='# config/infector.cr
Wordsmith::Inflector.inflections.irregular("vrf", "vrfs")'
) }}
<p>
  Now if you use the resource generator, VRF will be 
  singluar/pluralised correctly. That's not all though. 
  If you stop there, you get the following error.
</p>
{{ text::code_block(
  header="error",
  language="text",
  code=`Unhandled exception: Vrf wants to use the 'vrves' table but it is missing.`
) }}

<p>
  Next, update the 
  {{ text::emphasize(text="src/models/vrfs.cr") }}
 
  file, explicitly naming the table 
  {{ text::emphasize(text=":vrfs") }}
.
</p>

{{ text::code_block(
  header="file",
  language="crystal",
  code='# src/models/vrfs.cr
class Vrf < BaseModel
  # table do
  # Add :vrfs here
  table :vrfs do
    column name : String
    column description : String
    column route_target : String
    column route_distinguisher : String
  end
end'
) }}

<p>
  Finally, restart the dev server and you 
  will be golden.
</p>

<h3 id="outro">Outro</h3>
<p>
  In this post we added some inflection rules 
  to correctly handle acronym pluralisation. 
  Special shout out to Bill Tihen for the 
  excellent post.
</p>

{% endblock page_content %}